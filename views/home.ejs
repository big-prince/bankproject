<!DOCTYPE html>
<html>
<head>
  <title>UTC Bank Dashboard</title>
  <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Dosis:wght@200;300;400;500;600;700;800&family=Fjalla+One&family=Fjord+One&family=Montserrat:wght@100;200&family=Philosopher:ital,wght@0,400;0,700;1,400;1,700&family=Playfair+Display:wght@700&display=swap');
        /* General styles */
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f1f1f1;
}

h1, h2 {
  color: #fcfcfc;
  font-size: 60px;
  padding-top: -4rem;
  margin-bottom: -0rem;
}

header, h2 {
  color: #fcfcfc;
  font-size: 2rem;
  padding-top: -4rem;
  margin-bottom: -0rem;
}

header {
  background-color: #052742;
  color: white;
  padding: 20px;
 font-family: 'Philosopher', sans-serif;
}
header

.balance {
  font-size: 18px;
  margin-top: 10px;
}

.transactions {
  background-color: white;
  padding: 20px;
  margin-top: 20px;
  border-radius: 5px;
}

.transactions h2 {
  color: #333;
  font-size: 24px;
  margin-bottom: 10px;
}

.transactions ul {
  list-style: none;
  padding: 0;
}

.transactions li {
  margin-bottom: 10px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid #ccc;
  padding-bottom: 5px;
}

.transaction-date {
  font-size: 14px;
  color: #666;
}

.transaction-description {
  font-size: 16px;
  color: #333;
  flex-grow: 1;
  margin-left: 10px;
}

.transaction-amount {
  font-size: 18px;
  font-weight: bold;
}

.transaction-amount.debit {
  color: red;
}

.transaction-amount.credit {
  color: green;
}

.delete-transaction {
  background-color: #ff5252;
  color: white;
  border: none;
  padding: 5px 10px;
  border-radius: 3px;
  cursor: pointer;
}

.transfer {
  background-color: white;
  padding: 20px;
  margin-top: 20px;
  border-radius: 5px;
}

.transfer h2 {
  color: #333;
  font-size: 24px;
  margin-bottom: 10px;
}

.transfer form {
  display: flex;
  flex-direction: column;
}

.transfer label {
  font-size: 16px;
  color: #333;
  margin-bottom: 5px;
}

.transfer input[type="text"] {
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  margin-bottom: 10px;
}

.button-send, button {
  background-color: #2196f3;
  color: white;
  border: none;
  padding: 10px;
  border-radius: 5px;
  cursor: pointer;
}

.button-send {
  background-color: #ff9800;
  margin-right: 10px;
}

.button-request {
  background-color: #ff9800;
}

.alert {
    display: none; /* Hidden by default */
    background-color: #fa2112; /* Red background color */
    color: white; /* Text color */
    padding: 15px; /* Padding around the text */
    border-radius: 4px; /* Rounded corners */
    position: fixed; /* Fixed positioning to stay on top */
    bottom: 20px; /* Distance from the bottom */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Move left by 50% of its width to center */
    z-index: 999; /* High z-index to appear above other elements */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); /* Box shadow for a nice effect */
    font-family: Arial, sans-serif; /* Font family */
    font-size: 25px; /* Font size */
  }

 /* Styles for the backdrop blur */
 .backdrop {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(5px);
      z-index: 9998;
      display: none;
    }

    /* Styles for the popup */
    .popup {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: white;
      padding: 20px;
      border: 1px solid #ccc;
      border-radius: 1.5rem;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      z-index: 9999;
      display: none;
    }

    .popup h2 {
      margin-top: 0;
    }

    .popup input[type="password"] {
      margin: 10px 0;
      padding: 8px;
    }

    .popup button {
      padding: 8px 20px;
      background:  #052742;
      color: white;
      border: none;
      cursor: pointer;
    }

    /* Styles for the "Create PIN" link */
    .create-pin-link {
      display: block;
      margin-top: 10px;
      font-size: 14px;
      color:  #052742;
      text-decoration: none;
      cursor: pointer;
    }
    .create-pin-link2 {
      display: block;
      margin-top: 10px;
      font-size: 14px;
      color:  #052742;
      text-decoration: none;
      cursor: pointer;
    }
    .newpin{
      display: none;
    }

/* Other styles for different sections and elements */

/* Adjust styles as needed for responsiveness and to match your desired design */

    </style>
  <header>
    <h1>Welcome, <%= profilename %></h1>
    <p class="balance">Account Number: <%= accountNumber%></p>
    <p class="balance">Current Account Balance: &#x20A6;<%= accountBalance%></p>
    <a href="http://localhost:5000/"><button class="button send" style="margin-top: 2rem;background-color: red; align-items: flex-end; text-align: right;">Logout</button> </a>

  </header>

  
  <section class="transfer">
    <h2>Transfer Money</h2>
    <form>
      <div>
        <label for="recipient">Recipient:</label>
        <input type="text" id="recipient" name="recipient" placeholder="Account Number" maxlength="10" minlength=10 required>
      </div>
      <div>
        <label for="amount">Amount:</label>
        <input type="text" id="amount" name="amount" placeholder="&#x20A6;" min=3 required>
      </div>
      <div>
        <!-- HTML content -->
        <div class="alert" id="alertMessage">
          Money sent, Reload!
        </div>
        <div class="alert" id="alertMessage2">
          Money Received, Reload!
        </div>
        <!-- <input type="submit" value="Send Money" class="button send">
          <input type="submit" value="Request Money" class="button request"> -->
          <button class="button-send" id="openPopupButton">Send Money</button>
          <!-- <button class="button-request">Request Money</button> -->
        </div>
      </form>
     

      <div class="backdrop" id="backdrop"></div>
    
      <div class="popup" id="pinPopup">
        <div class="existingPin">
          <h2>Enter 4-Digit PIN</h2>
          <input type="password" placeholder="PIN" id="pin-input" minlength="4" maxlength="4">
          <button id="pinSubmitButton">Enter</button>
          <a href="#" class="create-pin-link">No PIN? Create PIN</a>
          <div class="alert" id="alertMessage6">
            Invalid Recipient Account
          </div>
          <div class="alert" id="alertMessage3">
            Pin Created!
          </div>
          <div class="alert" id="alertMessage5">
            Create Pin!
          </div>
        </div>
        <div class="newpin">
          <h2>Create New PIN</h2>
          <input type="password" placeholder="New PIN" class="newPinInput" minlength="4" maxlength="4">
          <input type="password" placeholder="Account Password" class="newPinPassword"></br>
          <button id="createPinSubmitButton" class="newPinSubmit">Enter</button>
          <a href="#" class="create-pin-link2"> Already have pin?</a>
          <div class="alert" id="alertMessage4">
            Account already has PIN!
          </div>
        </div>
      </div>
    </section>
    <section class="transactions">
      <h2>Last 10 Transactions</h2>
      <ul class="transaction-list">
        <% transactions.forEach((transaction, index) => { %>
          <li>
            <p>Date: <%= transaction.tTime %></p>
            <p>Description: <%= transaction.tDescription %></p>
            <p>Amount: <%= transaction.tAmount %></p>
            <!-- <button class="delete-transaction" data-index="<%= index %>" style="background-color: red; color: white;">Delete</button> -->
          </li>
        <% }) %>
      </ul>
      <!-- <button style="background-color: #2196f3;color: white;" class="seemore-btn">see more..</button> -->
    </section>

  <!-- Other sections and content -->
  <script >
    const sendButton = document.querySelector('.button-send');
    const requestButton = document.querySelector('.button-request');
    const openPopupButton = document.getElementById('openPopupButton');
    const backdrop = document.getElementById('backdrop');
    const pinPopup = document.getElementById('pinPopup');
    const createPinLink = document.querySelector('.create-pin-link');
    const pinSubmitButton = document.getElementById('pinSubmitButton');
    const pinInput = document.getElementById('pin-input');
    const existingPin = document.querySelector('.existingPin')
    const newPin = document.querySelector('.newpin')
    const alreadyPin = document.querySelector('.create-pin-link2')
    const newPinInput = document.querySelector('.newPinInput');
    const newPinPassword = document.querySelector('.newPinPassword');
    const newPinSubmit = document.querySelector('.newPinSubmit');

    openPopupButton.addEventListener('click', () => {
      // backdrop.style.display = 'block';
      // pinPopup.style.display = 'block';
    });

    alreadyPin.addEventListener('click', ()=>{
      newPin.style.display = 'none'
      existingPin.style.display = 'block'
    });

    //newPin Submit
    newPinSubmit.addEventListener('click',async (e)=>{
      e.preventDefault()
      //check if their value is empty
      if(newPinInput.value == "" && newPinPassword == ""){
        // console.log('Value cannot be empty')
      }
      //send to backend
      const url = 'http://localhost:5000/home/createPin';
      try {
        const response = await fetch(url, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            pin: newPinInput.value,
            password: newPinPassword.value
          })
        });

          const data = await response.json();
        
        if (response.ok) {
          // Show success alert
          const alertMessage = document.getElementById('alertMessage3');
          alertMessage.style.display = 'block';
          setTimeout(function () {
            alertMessage.style.display = 'none';
            }, 4000);
          //set the input to zero
          document.querySelector('.newPinInput').value = ""
          document.querySelector('.newPinPassword').value = ""
          //enter way to input the new pin
          newPin.style.display = 'none'
          existingPin.style.display = 'block'
        }

        if(!response.ok){
          //show alert
          const alertMessage4 = document.getElementById('alertMessage4');
          alertMessage4.style.display = 'block';
          setTimeout(function () {
            alertMessage4.style.display = 'none';
          }, 4000)
        }

      }catch(error){
        // console.log("Unable to send to backend...", error)
      }
    })

    createPinLink.addEventListener('click', () => {
      newPin.style.display = 'block'
      existingPin.style.display = 'none'
      //set pin value to 0
      document.getElementById('pin-input').value = ""
    });

      //pin submit
    pinSubmitButton.addEventListener('click',async (e) => {
      e.preventDefault()
      // Handle PIN submission here
      
      // Get credentials
      const recipient = document.getElementById('recipient');
      const amount = document.getElementById('amount');
      const pinInput = document.getElementById('pin-input');


      // Send credentials to backend
      const url = 'http://localhost:5000/home/';
      try {
        const response = await fetch(url, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            recipient: recipient.value,
            amount: amount.value,
            oldPin: pinInput.value
          })
        });
        const data = await response.json();
        
        if (response.ok) {
          // Show success alert
          const alertMessage = document.getElementById('alertMessage');
          alertMessage.style.display = 'block';
          setTimeout(function () {
            alertMessage.style.display = 'none';
          }, 6000);
          
          document.getElementById('recipient').value = '';
          document.getElementById('amount').value = '';
          backdrop.style.display = 'none';
          pinPopup.style.display = 'none';
          document.getElementById('pin-input').value = "";
        } 

        //if response is wrong
        if(!response.ok){
          //coming from user having a bad pin
          if(data.message == 'No pin found'){
            const alertMessage = document.getElementById('alertMessage5');
            alertMessage.style.display = 'block';
            setTimeout(function () {
            alertMessage.style.display = 'none';
            }, 6000);
          }
          //recipient not existing
          if(data.message == 'Recipient does not exist'){
            const alertMessage = document.getElementById('alertMessage6');
            alertMessage.style.display = 'block';
            setTimeout(function () {
            alertMessage.style.display = 'none';
            }, 6000);
          }
        }
      } catch (error) {
        console.error('Error:', error);
      }
      
    });

    backdrop.addEventListener('click', () => {
      backdrop.style.display = 'none';
      pinPopup.style.display = 'none';
    });

    //create pin submit button
    
    //send form to backend
    sendButton.addEventListener('click', async (e) => {
        e.preventDefault();
        let recipient = document.getElementById('recipient').value
        let amount = document.getElementById('amount').value
        if(recipient !== '' && amount !== ''){
          backdrop.style.display = 'block';
          pinPopup.style.display = 'block';
        }
});

    requestButton.addEventListener('click', async (e)=>{
      e.preventDefault()
      //get credentials
      const recipient = document.getElementById('recipient');
      const amount = document.getElementById('amount');
      
      //send credentials to backend
      const url = 'http://localhost:5000/home/request'
      const res = await fetch(url, {
        method: 'POST',
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          recipient: recipient.value,
          amount: amount.value
        })
      })
      .then((response)=>{
        if(response.ok){
          // JavaScript to show the alert when required
          const alertMessage = document.getElementById("alertMessage2");
          alertMessage.style.display = "block"; // Show the alert

          setTimeout(function () {
            alertMessage.style.display = "none"; // Hide the alert after 4 seconds
          }, 4000); 
          document.getElementById('recipient').value = ""
          document.getElementById('amount').value = ""
        }else{
          // console.log('Money not Sent....')
        }
      })
    })
   


  </script>
  <script src="app.js"></script>
</body>
</html>
