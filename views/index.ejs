<!-- index.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Login/Signup</title>
  <script src="https://kit.fontawesome.com/6dcb090a5e.js" crossorigin="anonymous"></script>
</head>
<body>
    <style>
        /* styles.css */
body {
  font-family: Arial, sans-serif;
  background-color:  #052742;
  margin: 0;
  padding: 0;
}

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.auth-container {
  display: flex;
}

.auth-card {
  background-color: #ffffff;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  padding: 20px;
  margin: 10px;
  width: 300px;
}

#login-form :focus {
  outline:none;
    border-color:#052742;
    box-shadow:0 0 3px #052742;
}
#signup-form :focus {
  outline:none;
    border-color:#052742;
    box-shadow:0 0 3px #052742;
}


.auth-card h2 {
  margin-top: 0;
}

.auth-card form {
  display: flex;
  flex-direction: column;
}

.auth-card input {
  margin-bottom: 10px;
  padding: 10px;
  border-radius: 4px;
  border: 1px solid #ccc;
}

.auth-card button {
  padding: 10px;
  background-color: #052742;
  color: #fff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.auth-card p {
  margin-top: 10px;
}

.auth-card a {
  color:  #052742;
}

.alert {
    display: none; /* Hidden by default */
    background-color: #ff0000; /* Red background color */
    color: white; /* Text color */
    padding: 15px; /* Padding around the text */
    border-radius: 4px; /* Rounded corners */
    position: fixed; /* Fixed positioning to stay on top */
    bottom: 20px; /* Distance from the bottom */
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Move left by 50% of its width to center */
    z-index: 999; /* High z-index to appear above other elements */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); /* Box shadow for a nice effect */
    font-family: Arial, sans-serif; /* Font family */
    font-size: 25px; /* Font size */
  }

  @media (max-width: 575px) {
  .container {
    height: auto;
  }

  .auth-container {
    flex-direction: column;
  }

  .auth-card {
    width: 100%;
    margin: 0 auto;
    padding: 10px 20px;
  }

  .auth-card h2 {
    font-size: 18px;
    line-height: 20px;
  }

  .auth-card form {
    max-width: 400px;
  }

  .auth-card input {
    margin-bottom: 10px;
    padding: 5px;
    width: 100%;
  }

  .auth-card button {
    padding: 10px;
    width: 100%;
  }

  .auth-card p {
    margin-top: 10px;
    font-size: 14px;
  }

  .auth-card a {
    font-size: 14px;
  }

  .alert {
    width: 100%;
  }
}

@media (max-width: 375px) {
  .auth-card {
    padding: 10px 10px;
  }

  .auth-card h2 {
    font-size: 16px;
    line-height: 20px;
  }

  .auth-card form {
    max-width: 280px;
  }

  .auth-card input {
    padding: 4px;
    width: 70%;
  }

  .auth-card button {
    padding: 8px;
    width: 70%;
  }

  .auth-card p {
    margin-top: 5px;
    font-size: 12px;
  }

  .auth-card a {
    font-size: 12px;
  }
}

@media (max-width: 320px) {
  .auth-card {
    padding: 10px 5px;
  }

  .auth-card h2 {
    font-size: 14px;
    line-height: 20px;
  }

  .auth-card form {
    max-width: 220px;
  }

  .auth-card input {
    padding: 3px;
    width: 50%;
  }

  .auth-card button {
    padding: 6px;
    width: 50%;
  }

  .auth-card p {
    margin-top: 3px;
    font-size: 10px;
  }

  .auth-card a {
    font-size: 10px;
  }
}



    </style>
  <div class="container">
    <h1 style="align-items: center;color:  white;display: flex;font-size: 3rem;padding-right: 5rem;">JUT BANK</h1>
    <div class="auth-container">
      <div class="auth-card" id="login-card">
        <h2>Login <i class="fa-sharp fa-solid fa-arrow-right-to-bracket"></i></h2>
        <form id="login-form">
          <input type="email" placeholder="Email" id="login-email" required>
          <input type="password" placeholder="Password" id="login-password" required>
          <button type="submit" class="login-btn" style="color: white">Login</button>
        </form>
        <p>Don't have an account? <a href="#" id="signup-link">Sign Up</a></p>
      </div>
      <div class="auth-card" id="signup-card">
        <h2>Sign Up <i class="fa-solid fa-user-plus"></i></h2>
        <form id="signup-form">
          <input type="text" placeholder="Full Name" id="fullName" required>
          <input type="email" placeholder="Email" id="email" required>
          <input type="text" placeholder="New AccountNo." id="account" maxlength="10" minlength="10" required>
          <input type="password" placeholder="Password" id="password" maxlength="50" minlength="5" required>
          <button type="submit" class="signup-btn">Sign Up</button>
        </form>
        <p>Already have an account? <a href="#" id="login-link">Login</a></p>
      </div>
    </div>
    <div class="alert" id="alertMessage">
      Incorrect Password
    </div>
    <div class="alert" id="alertMessage2">
      User Email not Found
    </div>
  </div>
  
  <script>
   document.addEventListener('DOMContentLoaded', function() {
  const loginForm = document.getElementById('login-form');
  const signupForm = document.getElementById('signup-form');
  const signupLink = document.getElementById('signup-link');
  const loginLink = document.getElementById('login-link');
  const signupBtn = document.querySelector('.signup-btn');
  const loginBtn = document.querySelector('.login-btn');
  const loginCard = document.getElementById('login-card')
  const signupCard = document.getElementById('signup-card')

  function showLoginForm() {
    loginCard.style.display = 'block';
    signupCard.style.display = 'none';
  }

  function showSignupForm() {
    loginCard.style.display = 'none';
    signupCard.style.display = 'block';
  }

  function handleLoginFormSubmit(event) {
    event.preventDefault();
    const email = loginForm.elements.email.value;
    const password = loginForm.elements.password.value;
    // Handle login form submission here
    console.log('Login form submitted');
    console.log('Email:', email);
    console.log('Password:', password);

  }

  async function handleSignupFormSubmit(event) {
    event.preventDefault();
    const fullName = signupForm.elements.fullName.value;
    const email = signupForm.elements.email.value;
    const password = signupForm.elements.password.value;
    // Handle signup form submission here
    console.log('Signup form submitted');
    console.log('Full Name:', fullName);
    console.log('Email:', email);
    console.log('Password:', password);

   
  }

  // Event listeners
  signupLink.addEventListener('click', function(event) {
    event.preventDefault();
    showSignupForm();
  });

  loginLink.addEventListener('click', function(event) {
    event.preventDefault();
    showLoginForm();
  });

  signupBtn.addEventListener('click', async (e)=>{
    e.preventDefault();
    const name = document.getElementById('fullName')
    const email = document.getElementById('email')  
    const password = document.getElementById('password')
    const account = document.getElementById('account')


    const url = 'http://localhost:5000/signup'
    const res = await fetch(url, {
        method: 'POST',
        headers: {
            "Content-Type": "application/json"
        },
        credentials: 'include',
        body: JSON.stringify({
            name: name.value,
            email: email.value,
            account: account.value,
            password: password.value
        })  

    })
    .then((response)=>{
    if(response.ok){
      return response.json
    }else{
      throw new Error('invalid Email or password...')
    }
  })
  .then((data)=>{
    localStorage.setItem('token', data.token);
        window.location.href = 'http://localhost:5000/home'
  })
  .catch(error=> console.log(error))
  })

  //login send credentials
  loginBtn.addEventListener('click',async (e)=>{
    e.preventDefault()
    const email = document.getElementById('login-email');
    const password = document.getElementById('login-password')
    const url = 'http://localhost:5000/login'
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        "Content-Type": "application/json",
        
      },
      credentials: 'include',
      body: JSON.stringify({
            email: email.value,
            password: password.value 
    })
  })
  const data = await response.json();
  
  if(response.ok){
    console.log(data.message)
    localStorage.setItem('token', data.token);
    window.location.href = 'http://localhost:5000/home'
    return response.json
  }
  //if response is not ok
  if(!response.ok){
    //1. if password is wrong
    if(data.message == "Incorrect password"){
      const alertMessage = document.getElementById('alertMessage');
          alertMessage.style.display = 'block';
          setTimeout(function () {
            alertMessage.style.display = 'none';
          }, 6000);
    }

    //2. if email does not exists
    if(data.message == "Incorrect email"){
      const alertMessage = document.getElementById('alertMessage2');
          alertMessage.style.display = 'block';
          setTimeout(function () {
            alertMessage.style.display = 'none';
          }, 6000);
    }
  }
})
  
  

  loginForm.addEventListener('submit', handleLoginFormSubmit);
  signupForm.addEventListener('submit', handleSignupFormSubmit);

  // Show the login form by default
  showLoginForm();
});

  </script>
</body>
</html>
